[
    {
        "BriefDescription": "Total Write Cache Occupancy; Any Source",
        "EventCode": "0x12",
        "EventName": "UNC_I_CACHE_TOTAL_OCCUPANCY.ANY",
        "PerPkg": "1",
        "PublicDescription": "Accumulates the number of reads and writes that are outstanding in the uncore in each cycle.  This is effectively the sum of the READ_OCCUPANCY and WRITE_OCCUPANCY events.; Tracks all requests from any source port.",
        "UMask": "0x1",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Total Write Cache Occupancy; Select Source",
        "EventCode": "0x12",
        "EventName": "UNC_I_CACHE_TOTAL_OCCUPANCY.SOURCE",
        "PerPkg": "1",
        "PublicDescription": "Accumulates the number of reads and writes that are outstanding in the uncore in each cycle.  This is effectively the sum of the READ_OCCUPANCY and WRITE_OCCUPANCY events.; Tracks only those requests that come from the port specified in the IRP_PmonFilter.OrderingQ register.  This register allows one to select one specific queue.  It is not possible to monitor multiple queues at a time.",
        "UMask": "0x2",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Clocks in the IRP",
        "EventName": "UNC_I_CLOCKTICKS",
        "PerPkg": "1",
        "PublicDescription": "Number of clocks in the IRP.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Coherent Ops; CLFlush",
        "EventCode": "0x13",
        "EventName": "UNC_I_COHERENT_OPS.CLFLUSH",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of coherency related operations servied by the IRP",
        "UMask": "0x80",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Coherent Ops; CRd",
        "EventCode": "0x13",
        "EventName": "UNC_I_COHERENT_OPS.CRD",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of coherency related operations servied by the IRP",
        "UMask": "0x2",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Coherent Ops; DRd",
        "EventCode": "0x13",
        "EventName": "UNC_I_COHERENT_OPS.DRD",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of coherency related operations servied by the IRP",
        "UMask": "0x4",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Coherent Ops; PCIDCAHin5t",
        "EventCode": "0x13",
        "EventName": "UNC_I_COHERENT_OPS.PCIDCAHINT",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of coherency related operations servied by the IRP",
        "UMask": "0x20",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Coherent Ops; PCIRdCur",
        "EventCode": "0x13",
        "EventName": "UNC_I_COHERENT_OPS.PCIRDCUR",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of coherency related operations servied by the IRP",
        "UMask": "0x1",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Coherent Ops; PCIItoM",
        "EventCode": "0x13",
        "EventName": "UNC_I_COHERENT_OPS.PCITOM",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of coherency related operations servied by the IRP",
        "UMask": "0x10",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Coherent Ops; RFO",
        "EventCode": "0x13",
        "EventName": "UNC_I_COHERENT_OPS.RFO",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of coherency related operations servied by the IRP",
        "UMask": "0x8",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Coherent Ops; WbMtoI",
        "EventCode": "0x13",
        "EventName": "UNC_I_COHERENT_OPS.WBMTOI",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of coherency related operations servied by the IRP",
        "UMask": "0x40",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 0; Cache Inserts of Atomic Transactions as Secondary",
        "EventCode": "0x14",
        "EventName": "UNC_I_MISC0.2ND_ATOMIC_INSERT",
        "PerPkg": "1",
        "PublicDescription": "Counts Timeouts - Set 0 : Cache Inserts of Atomic Transactions as Secondary",
        "UMask": "0x10",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 0; Cache Inserts of Read Transactions as Secondary",
        "EventCode": "0x14",
        "EventName": "UNC_I_MISC0.2ND_RD_INSERT",
        "PerPkg": "1",
        "PublicDescription": "Counts Timeouts - Set 0 : Cache Inserts of Read Transactions as Secondary",
        "UMask": "0x4",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 0; Cache Inserts of Write Transactions as Secondary",
        "EventCode": "0x14",
        "EventName": "UNC_I_MISC0.2ND_WR_INSERT",
        "PerPkg": "1",
        "PublicDescription": "Counts Timeouts - Set 0 : Cache Inserts of Write Transactions as Secondary",
        "UMask": "0x8",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 0; Fastpath Rejects",
        "EventCode": "0x14",
        "EventName": "UNC_I_MISC0.FAST_REJ",
        "PerPkg": "1",
        "PublicDescription": "Counts Timeouts - Set 0 : Fastpath Rejects",
        "UMask": "0x2",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 0; Fastpath Requests",
        "EventCode": "0x14",
        "EventName": "UNC_I_MISC0.FAST_REQ",
        "PerPkg": "1",
        "PublicDescription": "Counts Timeouts - Set 0 : Fastpath Requests",
        "UMask": "0x1",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 0; Fastpath Transfers From Primary to Secondary",
        "EventCode": "0x14",
        "EventName": "UNC_I_MISC0.FAST_XFER",
        "PerPkg": "1",
        "PublicDescription": "Counts Timeouts - Set 0 : Fastpath Transfers From Primary to Secondary",
        "UMask": "0x20",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 0; Prefetch Ack Hints From Primary to Secondary",
        "EventCode": "0x14",
        "EventName": "UNC_I_MISC0.PF_ACK_HINT",
        "PerPkg": "1",
        "PublicDescription": "Counts Timeouts - Set 0 : Prefetch Ack Hints From Primary to Secondary",
        "UMask": "0x40",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 0; Prefetch TimeOut",
        "EventCode": "0x14",
        "EventName": "UNC_I_MISC0.PF_TIMEOUT",
        "PerPkg": "1",
        "PublicDescription": "Indicates the fetch for a previous prefetch wasn't accepted by the prefetch.   This happens in the case of a prefetch TimeOut",
        "UMask": "0x80",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 1; Data Throttled",
        "EventCode": "0x15",
        "EventName": "UNC_I_MISC1.DATA_THROTTLE",
        "PerPkg": "1",
        "PublicDescription": "IRP throttled switch data",
        "UMask": "0x80",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 1",
        "EventCode": "0x15",
        "EventName": "UNC_I_MISC1.LOST_FWD",
        "PerPkg": "1",
        "PublicDescription": "Misc Events - Set 1 : Lost Forward : Snoop pulled away ownership before a write was committed",
        "UMask": "0x10",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 1; Received Invalid",
        "EventCode": "0x15",
        "EventName": "UNC_I_MISC1.SEC_RCVD_INVLD",
        "PerPkg": "1",
        "PublicDescription": "Secondary received a transfer that did not have sufficient MESI state",
        "UMask": "0x20",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 1; Received Valid",
        "EventCode": "0x15",
        "EventName": "UNC_I_MISC1.SEC_RCVD_VLD",
        "PerPkg": "1",
        "PublicDescription": "Secondary received a transfer that did have sufficient MESI state",
        "UMask": "0x40",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 1; Slow Transfer of E Line",
        "EventCode": "0x15",
        "EventName": "UNC_I_MISC1.SLOW_E",
        "PerPkg": "1",
        "PublicDescription": "Secondary received a transfer that did have sufficient MESI state",
        "UMask": "0x4",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 1; Slow Transfer of I Line",
        "EventCode": "0x15",
        "EventName": "UNC_I_MISC1.SLOW_I",
        "PerPkg": "1",
        "PublicDescription": "Snoop took cacheline ownership before write from data was committed.",
        "UMask": "0x1",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 1; Slow Transfer of M Line",
        "EventCode": "0x15",
        "EventName": "UNC_I_MISC1.SLOW_M",
        "PerPkg": "1",
        "PublicDescription": "Snoop took cacheline ownership before write from data was committed.",
        "UMask": "0x8",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Misc Events - Set 1; Slow Transfer of S Line",
        "EventCode": "0x15",
        "EventName": "UNC_I_MISC1.SLOW_S",
        "PerPkg": "1",
        "PublicDescription": "Secondary received a transfer that did not have sufficient MESI state",
        "UMask": "0x2",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "AK Ingress Occupancy",
        "EventCode": "0xA",
        "EventName": "UNC_I_RxR_AK_INSERTS",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of allocations into the AK Ingress.  This queue is where the IRP receives responses from R2PCIe (the ring).",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "UNC_I_RxR_BL_DRS_CYCLES_FULL",
        "EventCode": "0x4",
        "EventName": "UNC_I_RxR_BL_DRS_CYCLES_FULL",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of cycles when the BL Ingress is full.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "BL Ingress Occupancy - DRS",
        "EventCode": "0x1",
        "EventName": "UNC_I_RxR_BL_DRS_INSERTS",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of allocations into the BL Ingress.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "UNC_I_RxR_BL_DRS_OCCUPANCY",
        "EventCode": "0x7",
        "EventName": "UNC_I_RxR_BL_DRS_OCCUPANCY",
        "PerPkg": "1",
        "PublicDescription": "Accumulates the occupancy of the BL Ingress in each cycles.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "UNC_I_RxR_BL_NCB_CYCLES_FULL",
        "EventCode": "0x5",
        "EventName": "UNC_I_RxR_BL_NCB_CYCLES_FULL",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of cycles when the BL Ingress is full.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "BL Ingress Occupancy - NCB",
        "EventCode": "0x2",
        "EventName": "UNC_I_RxR_BL_NCB_INSERTS",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of allocations into the BL Ingress.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "UNC_I_RxR_BL_NCB_OCCUPANCY",
        "EventCode": "0x8",
        "EventName": "UNC_I_RxR_BL_NCB_OCCUPANCY",
        "PerPkg": "1",
        "PublicDescription": "Accumulates the occupancy of the BL Ingress in each cycles.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "UNC_I_RxR_BL_NCS_CYCLES_FULL",
        "EventCode": "0x6",
        "EventName": "UNC_I_RxR_BL_NCS_CYCLES_FULL",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of cycles when the BL Ingress is full.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "BL Ingress Occupancy - NCS",
        "EventCode": "0x3",
        "EventName": "UNC_I_RxR_BL_NCS_INSERTS",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of allocations into the BL Ingress.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "UNC_I_RxR_BL_NCS_OCCUPANCY",
        "EventCode": "0x9",
        "EventName": "UNC_I_RxR_BL_NCS_OCCUPANCY",
        "PerPkg": "1",
        "PublicDescription": "Accumulates the occupancy of the BL Ingress in each cycles.  This queue is where the IRP receives data from R2PCIe (the ring).  It is used for data returns from read requets as well as outbound MMIO writes.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Snoop Responses; Hit E or S",
        "EventCode": "0x17",
        "EventName": "UNC_I_SNOOP_RESP.HIT_ES",
        "PerPkg": "1",
        "PublicDescription": "Snoop Responses : Hit E or S",
        "UMask": "0x4",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Snoop Responses; Hit I",
        "EventCode": "0x17",
        "EventName": "UNC_I_SNOOP_RESP.HIT_I",
        "PerPkg": "1",
        "PublicDescription": "Snoop Responses : Hit I",
        "UMask": "0x2",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Snoop Responses; Hit M",
        "EventCode": "0x17",
        "EventName": "UNC_I_SNOOP_RESP.HIT_M",
        "PerPkg": "1",
        "PublicDescription": "Snoop Responses : Hit M",
        "UMask": "0x8",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Snoop Responses; Miss",
        "EventCode": "0x17",
        "EventName": "UNC_I_SNOOP_RESP.MISS",
        "PerPkg": "1",
        "PublicDescription": "Snoop Responses : Miss",
        "UMask": "0x1",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Snoop Responses; SnpCode",
        "EventCode": "0x17",
        "EventName": "UNC_I_SNOOP_RESP.SNPCODE",
        "PerPkg": "1",
        "PublicDescription": "Snoop Responses : SnpCode",
        "UMask": "0x10",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Snoop Responses; SnpData",
        "EventCode": "0x17",
        "EventName": "UNC_I_SNOOP_RESP.SNPDATA",
        "PerPkg": "1",
        "PublicDescription": "Snoop Responses : SnpData",
        "UMask": "0x20",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Snoop Responses; SnpInv",
        "EventCode": "0x17",
        "EventName": "UNC_I_SNOOP_RESP.SNPINV",
        "PerPkg": "1",
        "PublicDescription": "Snoop Responses : SnpInv",
        "UMask": "0x40",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Inbound Transaction Count; Atomic",
        "EventCode": "0x16",
        "EventName": "UNC_I_TRANSACTIONS.ATOMIC",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of Inbound transactions from the IRP to the Uncore.  This can be filtered based on request type in addition to the source queue.  Note the special filtering equation.  We do OR-reduction on the request type.  If the SOURCE bit is set, then we also do AND qualification based on the source portID.; Tracks the number of atomic transactions",
        "UMask": "0x10",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Inbound Transaction Count; Other",
        "EventCode": "0x16",
        "EventName": "UNC_I_TRANSACTIONS.OTHER",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of Inbound transactions from the IRP to the Uncore.  This can be filtered based on request type in addition to the source queue.  Note the special filtering equation.  We do OR-reduction on the request type.  If the SOURCE bit is set, then we also do AND qualification based on the source portID.; Tracks the number of 'other' kinds of transactions.",
        "UMask": "0x20",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Inbound Transaction Count; Read Prefetches",
        "EventCode": "0x16",
        "EventName": "UNC_I_TRANSACTIONS.RD_PREF",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of Inbound transactions from the IRP to the Uncore.  This can be filtered based on request type in addition to the source queue.  Note the special filtering equation.  We do OR-reduction on the request type.  If the SOURCE bit is set, then we also do AND qualification based on the source portID.; Tracks the number of read prefetches.",
        "UMask": "0x4",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Inbound Transaction Count; Reads",
        "EventCode": "0x16",
        "EventName": "UNC_I_TRANSACTIONS.READS",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of Inbound transactions from the IRP to the Uncore.  This can be filtered based on request type in addition to the source queue.  Note the special filtering equation.  We do OR-reduction on the request type.  If the SOURCE bit is set, then we also do AND qualification based on the source portID.; Tracks only read requests (not including read prefetches).",
        "UMask": "0x1",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Inbound Transaction Count; Writes",
        "EventCode": "0x16",
        "EventName": "UNC_I_TRANSACTIONS.WRITES",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of Inbound transactions from the IRP to the Uncore.  This can be filtered based on request type in addition to the source queue.  Note the special filtering equation.  We do OR-reduction on the request type.  If the SOURCE bit is set, then we also do AND qualification based on the source portID.; Tracks only write requests.  Each write request should have a prefetch, so there is no need to explicitly track these requests.",
        "UMask": "0x2",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Inbound Transaction Count; Write Prefetches",
        "EventCode": "0x16",
        "EventName": "UNC_I_TRANSACTIONS.WR_PREF",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of Inbound transactions from the IRP to the Uncore.  This can be filtered based on request type in addition to the source queue.  Note the special filtering equation.  We do OR-reduction on the request type.  If the SOURCE bit is set, then we also do AND qualification based on the source portID.; Tracks the number of write prefetches.",
        "UMask": "0x8",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "No AD Egress Credit Stalls",
        "EventCode": "0x18",
        "EventName": "UNC_I_TxR_AD_STALL_CREDIT_CYCLES",
        "PerPkg": "1",
        "PublicDescription": "Counts the number times when it is not possible to issue a request to the R2PCIe because there are no AD Egress Credits available.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "No BL Egress Credit Stalls",
        "EventCode": "0x19",
        "EventName": "UNC_I_TxR_BL_STALL_CREDIT_CYCLES",
        "PerPkg": "1",
        "PublicDescription": "Counts the number times when it is not possible to issue data to the R2PCIe because there are no BL Egress Credits available.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Outbound Read Requests",
        "EventCode": "0xE",
        "EventName": "UNC_I_TxR_DATA_INSERTS_NCB",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of requests issued to the switch (towards the devices).",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Outbound Read Requests",
        "EventCode": "0xF",
        "EventName": "UNC_I_TxR_DATA_INSERTS_NCS",
        "PerPkg": "1",
        "PublicDescription": "Counts the number of requests issued to the switch (towards the devices).",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "Outbound Request Queue Occupancy",
        "EventCode": "0xD",
        "EventName": "UNC_I_TxR_REQUEST_OCCUPANCY",
        "PerPkg": "1",
        "PublicDescription": "Accumulates the number of outstanding outbound requests from the IRP to the switch (towards the devices).  This can be used in conjunction with the allocations event in order to calculate average latency of outbound requests.",
        "Unit": "IRP"
    },
    {
        "BriefDescription": "VLW Received",
        "EventCode": "0x42",
        "EventName": "UNC_U_EVENT_MSG.DOORBELL_RCVD",
        "PerPkg": "1",
        "PublicDescription": "Virtual Logical Wire (legacy) message were received from Uncore.   Specify the thread to filter on using NCUPMONCTRLGLCTR.ThreadID.",
        "UMask": "0x8",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Filter Match",
        "EventCode": "0x41",
        "EventName": "UNC_U_FILTER_MATCH.DISABLE",
        "PerPkg": "1",
        "PublicDescription": "Filter match per thread (w/ or w/o Filter Enable).  Specify the thread to filter on using NCUPMONCTRLGLCTR.ThreadID.",
        "UMask": "0x2",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Filter Match",
        "EventCode": "0x41",
        "EventName": "UNC_U_FILTER_MATCH.ENABLE",
        "PerPkg": "1",
        "PublicDescription": "Filter match per thread (w/ or w/o Filter Enable).  Specify the thread to filter on using NCUPMONCTRLGLCTR.ThreadID.",
        "UMask": "0x1",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Filter Match",
        "EventCode": "0x41",
        "EventName": "UNC_U_FILTER_MATCH.U2C_DISABLE",
        "PerPkg": "1",
        "PublicDescription": "Filter match per thread (w/ or w/o Filter Enable).  Specify the thread to filter on using NCUPMONCTRLGLCTR.ThreadID.",
        "UMask": "0x8",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Filter Match",
        "EventCode": "0x41",
        "EventName": "UNC_U_FILTER_MATCH.U2C_ENABLE",
        "PerPkg": "1",
        "PublicDescription": "Filter match per thread (w/ or w/o Filter Enable).  Specify the thread to filter on using NCUPMONCTRLGLCTR.ThreadID.",
        "UMask": "0x4",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Cycles PHOLD Assert to Ack; Assert to ACK",
        "EventCode": "0x45",
        "EventName": "UNC_U_PHOLD_CYCLES.ASSERT_TO_ACK",
        "PerPkg": "1",
        "PublicDescription": "PHOLD cycles.  Filter from source CoreID.",
        "UMask": "0x1",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "RACU Request",
        "EventCode": "0x46",
        "EventName": "UNC_U_RACU_REQUESTS",
        "PerPkg": "1",
        "PublicDescription": "Number outstanding register requests within message channel tracker",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Monitor Sent to T0; Correctable Machine Check",
        "EventCode": "0x43",
        "EventName": "UNC_U_U2C_EVENTS.CMC",
        "PerPkg": "1",
        "PublicDescription": "Events coming from Uncore can be sent to one or all cores",
        "UMask": "0x10",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Monitor Sent to T0; Livelock",
        "EventCode": "0x43",
        "EventName": "UNC_U_U2C_EVENTS.LIVELOCK",
        "PerPkg": "1",
        "PublicDescription": "Events coming from Uncore can be sent to one or all cores; Filter by core",
        "UMask": "0x4",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Monitor Sent to T0; LTError",
        "EventCode": "0x43",
        "EventName": "UNC_U_U2C_EVENTS.LTERROR",
        "PerPkg": "1",
        "PublicDescription": "Events coming from Uncore can be sent to one or all cores; Filter by core",
        "UMask": "0x8",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Monitor Sent to T0; Monitor T0",
        "EventCode": "0x43",
        "EventName": "UNC_U_U2C_EVENTS.MONITOR_T0",
        "PerPkg": "1",
        "PublicDescription": "Events coming from Uncore can be sent to one or all cores; Filter by core",
        "UMask": "0x1",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Monitor Sent to T0; Monitor T1",
        "EventCode": "0x43",
        "EventName": "UNC_U_U2C_EVENTS.MONITOR_T1",
        "PerPkg": "1",
        "PublicDescription": "Events coming from Uncore can be sent to one or all cores; Filter by core",
        "UMask": "0x2",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Monitor Sent to T0; Other",
        "EventCode": "0x43",
        "EventName": "UNC_U_U2C_EVENTS.OTHER",
        "PerPkg": "1",
        "PublicDescription": "Events coming from Uncore can be sent to one or all cores; PREQ, PSMI, P2U, Thermal, PCUSMI, PMI",
        "UMask": "0x80",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Monitor Sent to T0; Trap",
        "EventCode": "0x43",
        "EventName": "UNC_U_U2C_EVENTS.TRAP",
        "PerPkg": "1",
        "PublicDescription": "Events coming from Uncore can be sent to one or all cores",
        "UMask": "0x40",
        "Unit": "UBOX"
    },
    {
        "BriefDescription": "Monitor Sent to T0; Uncorrectable Machine Check",
        "EventCode": "0x43",
        "EventName": "UNC_U_U2C_EVENTS.UMC",
        "PerPkg": "1",
        "PublicDescription": "Events coming from Uncore can be sent to one or all cores",
        "UMask": "0x20",
        "Unit": "UBOX"
    }
]
